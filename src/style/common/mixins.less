@import '../themes/default.less';

/**
 * text ellipsis
 */
.single-line() {
  width: auto;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}
.double-line() {
  width: auto;
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
}
.long-break() {
  word-wrap: break-word;
  word-break: normal;
}

/**
 * retina px border
 */
.border-1px-base(@direction: top, @border-color: @color-border-secondary) {
  content: ' ';
  position: absolute;
  border-@{direction}: 1px solid @border-color;
  color: @border-color;
}
.border-1px-left(@top: 0, @bottom: 0, @border-color: @color-border-secondary) {
  &::before {
    .border-1px-base(left, @border-color);
    left: 0;
    top: @top;
    bottom: @bottom;
    width: 1px;
    transform-origin: 100% 0;
    transform: scaleX(0.5);
  }
}
.border-1px-right(@top: 0, @bottom: 0, @border-color: @color-border-secondary) {
  &::after {
    .border-1px-base(right, @border-color);
    right: 0;
    top: @top;
    bottom: @bottom;
    width: 1px;
    transform-origin: 100% 0;
    transform: scaleX(0.5);
  }
}
.border-1px-top(@left: 0, @right: 0, @border-color: @color-border-secondary) {
  &::before {
    .border-1px-base(top, @border-color);
    top: -1px;
    left: @left;
    right: @right;
    height: 1px;
    transform-origin: 0 0;
    transform: scaleY(0.5);
  }
}
.border-1px-bottom(@left: 0, @right: 0, @border-color: @color-border-secondary) {
  &::after {
    .border-1px-base(bottom, @border-color);
    bottom: -1px;
    left: @left;
    right: @right;
    height: 1px;
    transform-origin: 0 0;
    transform: scaleY(0.5);
  }
}
.border-1px-box(@border, @border-radius: 0) {
  &:after {
    content: '';
    pointer-events: none;
    box-sizing: border-box;
    position: absolute;
    width: 200%;
    height: 200%;
    left: 0;
    top: 0;
    border-radius: @border-radius * 2;
    border: @border;
    transform: scale(0.5);
    transform-origin: 0 0;
  }
}
.border-1px-hide() {
  &::before,
  &::after {
    display: none;
  }
}

.hsv-color(@color, @level) when (@level = 6) {
  @result: @color;
}
.hsv-color(@color, @level) when (@level >= 1) and (@level <= 5) {
  @hue: hsvhue(@color);
  @saturation: hsvsaturation(@color);
  @value: hsvvalue(@color);
  @result: hsv(@hue, ceil(@saturation / 6 * @level), ceil((100 - @value) * (6 - @level) / 6 + @value));
}
.hsv-color(@color, @level) when (@level >= 7) and (@level <= 11) {
  @hue: hsvhue(@color);
  @saturation: hsvsaturation(@color);
  @value: hsvvalue(@color);
  @result: hsv(@hue, ceil((100 - @saturation) * (@level - 6) / 6 + @saturation), ceil(@value / 6 * (12 - @level)));
}

/**
 * others
 */
.iphonex-padding-bottom(@background-color: #fff) {
  padding-bottom: 0;
  padding-bottom: constant(safe-area-inset-bottom);
  padding-bottom: env(safe-area-inset-bottom);
  background-color: @background-color;
}
